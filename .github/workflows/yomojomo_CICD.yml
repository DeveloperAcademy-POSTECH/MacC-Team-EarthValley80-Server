# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Yomojomo CICD

on:
  push:
    branches: [ "develop", "chore/6-CICD" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: env파일 생성     
      run: |
        cd ./src/main/resources/
        touch ./env.properties
        echo "JWT_CLAIMS_ISSUER=$JWT_CLAIMS_ISSUER" >> ./env.properties
        echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> ./env.properties
        echo "SPRING_SECURITY_KAKAO_CLIENT_ID=$SPRING_SECURITY_KAKAO_CLIENT_ID" >> ./env.properties
        echo "SPRING_SECURITY_KAKAO_CLIENT_SECRET=$SPRING_SECURITY_KAKAO_CLIENT_SECRET" >> ./env.properties
        cat env.properties
      shell: bash
      env:
        JWT_CLAIMS_ISSUER: ${{ secrets.JWT_CLAIMS_ISSUER }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        SPRING_SECURITY_KAKAO_CLIENT_ID: ${{ secrets.SPRING_SECURITY_KAKAO_CLIENT }}
        SPRING_SECURITY_KAKAO_CLIENT_SECRET: ${{ secrets.SPRING_SECURITY_KAKAO_CLIENT_SECRET }}
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
              
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
    # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/
      
    # script file Copy
    - name: Copy shell
      run: cp ./scripts/* ./deploy

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./yomojomo-build.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./yomojomo-build.zip s3://yomojomo-api-deploy/
      # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name 	yomojomo-api \
        --deployment-group-name yomojomo-deploy-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=yomojomo-api-deploy,bundleType=zip,key=yomojomo-build.zip \
        --region ap-northeast-2

